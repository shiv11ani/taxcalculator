package com.plusgrade.taxcalculator;

import java.util.Map;
import java.util.HashMap;

public class ResultTaxCalculator {
    private double income;
    private int year;
    private double totalTaxes;
    public double getIncome() {
		return income;
	}

	public void setIncome(double income) {
		this.income = income;
	}

	public int getYear() {
		return year;
	}

	public void setYear(int year) {
		this.year = year;
	}

	public double getTotalTaxes() {
		return totalTaxes;
	}

	public void setTotalTaxes(double totalTaxes) {
		this.totalTaxes = totalTaxes;
	}

	public Map<String, Double> getTaxesPerBand() {
		return taxesPerBand;
	}

	public void setTaxesPerBand(Map<String, Double> taxesPerBand) {
		this.taxesPerBand = taxesPerBand;
	}

	public double getEffectiveRate() {
		return effectiveRate;
	}

	public void setEffectiveRate(double effectiveRate) {
		this.effectiveRate = effectiveRate;
	}

	private Map<String, Double> taxesPerBand;
    private double effectiveRate;

    public ResultTaxCalculator(double income, int year, double totalTaxes, Map<Integer, Double> taxBands) {
        this.income = income;
        this.year = year;
        this.totalTaxes = totalTaxes;
        this.taxesPerBand = calculateTaxesPerBand(taxBands);
        this.effectiveRate = (totalTaxes / income) * 100;
    }

    private Map<String, Double> calculateTaxesPerBand(Map<Integer, Double> taxBands) {
        Map<String, Double> taxesPerBand = new HashMap<>();
        double previousBand = 0.0;

        for (Map.Entry<Integer, Double> entry : taxBands.entrySet()) {
            int upperLimit = entry.getKey();
            double taxRate = entry.getValue();

            double taxableIncomeInBand = Math.min(income - previousBand, upperLimit - previousBand);
            double taxInBand = taxableIncomeInBand * taxRate;
            taxesPerBand.put("$" + previousBand + " <= Income <= $" + upperLimit, taxInBand);

            if (income <= upperLimit) {
                break;
            }

            previousBand = upperLimit;
        }

        return taxesPerBand;
    }
}
